"""
This type stub file was generated by pyright.
"""

import enum
from typing import Any, Literal, Optional, Type, TypeVar

from pydantic import BaseModel

logger = ...
T = TypeVar("T", bound=BaseModel)

class SupportedMethods(enum.Enum):
    GET = ...
    POST = ...

async def api_request_async(
    url: str,
    method: Literal[SupportedMethods.GET, SupportedMethods.POST],
    body: Optional[dict[str, Any]] = ...,
    headers: Optional[dict[str, str]] = ...,
    cookies: Optional[dict[str, str]] = ...,
    timeout: int = ...,
) -> dict[str, Any]: ...
def api_request(
    url: str,
    method: Literal[SupportedMethods.GET, SupportedMethods.POST],
    body: Optional[dict[str, Any]] = ...,
    headers: Optional[dict[str, str]] = ...,
    cookies: Optional[dict[str, str]] = ...,
    timeout: int = ...,
) -> dict[str, Any]: ...
def validate_api_response(validator_class: Type[T], data: dict[str, Any]) -> T:
    """
    Utility method to validate a response from a service using a Pydantic model.

    Args:
        validator_class: The Pydantic model to validate the response against
        data: The data to validate (response from a service)
    """
    ...
